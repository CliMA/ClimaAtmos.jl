var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"ClimaAtmos.TurbulenceConvection.Parameters","category":"page"},{"location":"api/#ClimaAtmos.TurbulenceConvection.Parameters","page":"API","title":"ClimaAtmos.TurbulenceConvection.Parameters","text":"Parameters\n\n\n\n\n\n","category":"module"},{"location":"equations/#Equations","page":"Equations","title":"Equations","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"note: Note\nThis follows what is currently implemented in examples: it should be kept up-to-date as code is modified. If you think something should be changed (but hasn't been), please add a note.","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"This describes the ClimaAtmos model equations and its discretizations. Where possible, we use a coordinate invariant form: the ClimaCore operators generally handle the conversions between bases internally.","category":"page"},{"location":"equations/#Prognostic-variables","page":"Equations","title":"Prognostic variables","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"rho: density in kg/m³. This is discretized at cell centers.\nboldsymbolu velocity, a vector in m/s. This is discretized via boldsymbolu = boldsymbolu_h + boldsymbolu_v where\nboldsymbolu_h = u_1 boldsymbole^1 + u_2 boldsymbole^2 is the projection onto horizontal covariant components (covariance here means with respect to the reference element), stored at cell centers.\nboldsymbolu_v = u_3 boldsymbole^3 is the projection onto the vertical covariant components, stored at cell faces.\nenergy, stored at cell centers; can be either:\nrho e: total energy in J/m³\nrho e_textint: internal energy in J/m³\nrho chi: other conserved scalars (moisture, tracers, etc), again stored at cell centers.","category":"page"},{"location":"equations/#Operators","page":"Equations","title":"Operators","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"We make use of the following operators","category":"page"},{"location":"equations/#Reconstruction","page":"Equations","title":"Reconstruction","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"I^c is the face-to-center reconstruction operator (arithmetic mean)\nI^f is the center-to-face reconstruction operator (arithmetic mean)\nWI^f is the center-to-face weighted reconstruction operator\nWI^f(J x) = I^f(J*x)  I^f(J), where J is the value of the Jacobian for use in the weighted interpolation operator\nU^f is the 1st or 3rd-order center-to-face upwind product operator # fix link","category":"page"},{"location":"equations/#Differential-operators","page":"Equations","title":"Differential operators","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"D_h is the discrete horizontal spectral divergence.\nD^c_v is the face-to-center vertical divergence.","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"todo: Todo\nAdd vertical diffusive tendencies (including surface fluxes)","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"G_h is the discrete horizontal spectral gradient.\nG^f_v is the center-to-face vertical gradient.\nthe gradient is set to 0 at the top and bottom boundaries.\nC_h is the curl components involving horizontal derivatives\nC_hboldsymbolu_h returns a vector with only vertical contravariant components.\nC_hboldsymbolu_v returns a vector with only horizontal contravariant components.\nC^f_v is the center-to-face curl involving vertical derivatives.\nC^f_vboldsymbolu_h returns a vector with only a horizontal contravariant component.\nthe curl is set to 0 at the top and bottom boundaries.\nWe need to clarify how best to handle this.","category":"page"},{"location":"equations/#Auxiliary-and-derived-quantities","page":"Equations","title":"Auxiliary and derived quantities","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"boldsymbolOmega is the planetary angular velocity. We currently use a shallow-atmosphere approximation, with\nboldsymbolOmega = Omega sin(phi) boldsymbole^v\nwhere phi is latitude, and Omega is the planetary rotation rate in rads/sec (for Earth, 729212 times 10^-5 s^-1) and boldsymbole^v is the unit radial basis vector. This implies that the horizontal contravariant component boldsymbolOmega^h is zero.\ntildeboldsymbolu is the mass-weighted reconstruction of velocity at the interfaces:\ntildeboldsymbolu = WI^f(rho J boldsymbolu_h) + boldsymbolu_v\ntodo: Todo\nClarify basis in which vector is interpolated.\nPhi = g z is the geopotential, where g is the gravitational acceleration rate and z is altitude above the mean sea level.\nK = tfrac12 boldsymbolu^2 is the specific kinetic energy (J/kg), reconstructed at cell centers by\nK = tfrac12 boldsymbolu_h + I^c(boldsymbolu_v)^2\nwhere boldsymbolu^2 = g^ij boldsymbolu_i boldsymbolu_j and g^ij is the contravariant metric tensor.\ntodo: Todo\nThis is not correct in the presence of topography.\np is air pressure, derived from the thermodynamic state, reconstructed at cell centers.\nboldsymbolF_R are the radiative fluxes: these are assumed to align vertically (i.e. the horizontal contravariant components are zero), and are constructed at cell faces from RRTMGP.jl.","category":"page"},{"location":"equations/#Equations-and-discretizations","page":"Equations","title":"Equations and discretizations","text":"","category":"section"},{"location":"equations/#Mass","page":"Equations","title":"Mass","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"Follows the continuity equation","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"fracpartialpartial t rho = - nabla cdot(rho boldsymbolu) ","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"This is discretized using the following","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"fracpartialpartial t rho \n= - D_h rho (boldsymbolu_h + I^c(boldsymbolu_v)) - D^c_v leftWI^f( J rho) tildeboldsymbolu right","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"with the","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"-D^c_vWI^f(J rho) boldsymbolu_v","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"term treated implicitly (check this)","category":"page"},{"location":"equations/#Momentum","page":"Equations","title":"Momentum","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"Uses the advective form equation","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"fracpartialpartial t boldsymbolu  = - (2 boldsymbolOmega + nabla times boldsymbolu) times boldsymbolu - frac1rho nabla p  - nabla(Phi + K) ","category":"page"},{"location":"equations/#Horizontal-momentum","page":"Equations","title":"Horizontal momentum","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"By breaking the curl and cross product terms into horizontal and vertical contributions, and removing zero terms (e.g. nabla_v  times boldsymbolu_v = 0), we obtain","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"fracpartialpartial t boldsymbolu_h  =\n  - (nabla_v times boldsymbolu_h +  nabla_h times boldsymbolu_v) times boldsymbolu^v\n  - (2 boldsymbolOmega^v + nabla_h times boldsymbolu_h) times boldsymbolu^h\n  - frac1rho nabla_h p  - nabla_h (Phi + K) ","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"where boldsymbolu^h and boldsymbolu^v are the horizontal and vertical contravariant vectors. The effect of topography is accounted for through the computation of the contravariant velocity components (projections from the covariant velocity representation) prior to computing the cross-product contributions. ","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"The (nabla_v times boldsymbolu_h +  nabla_h times boldsymbolu_v) times boldsymbolu^v term is discretized as","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"I^c((C^f_vboldsymbolu_h + C_hboldsymbolu_v) times boldsymbolu^v)","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"The (2 boldsymbolOmega^v + nabla_h times boldsymbolu_h) times boldsymbolu^h term is discretized as","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"(2 boldsymbolOmega^v + C_hboldsymbolu_h) times boldsymbolu^h","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"and the frac1rho nabla_h p  + nabla_h (Phi + K) as","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"frac1rho G_hp + G_hPhi + K ","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"where all these terms are treated explicitly.","category":"page"},{"location":"equations/#Vertical-momentum","page":"Equations","title":"Vertical momentum","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"Similarly for vertical velocity","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"fracpartialpartial t boldsymbolu_v  =\n  - (nabla_v times boldsymbolu_h + nabla_h times boldsymbolu_v) times boldsymbolu^h\n  - frac1rho nabla_v p - nabla_v(Phi + K) ","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"The (nabla_v times boldsymbolu_h + nabla_h times boldsymbolu_v) times boldsymbolu^h term is discretized as","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"(C^f_vboldsymbolu_h + C_hboldsymbolu_v) times I^f(boldsymbolu^h) ","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"and the frac1rho nabla_v p + nabla_v(Phi + K) term as","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"frac1I^f(rho) G^f_vp + G^fK + Phi ","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"with the latter treated implicitly.","category":"page"},{"location":"equations/#Total-energy","page":"Equations","title":"Total energy","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"fracpartialpartial t rho e = - nabla cdot((rho e + p) boldsymbolu + boldsymbolF_R)","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"is discretized using","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"fracpartialpartial t rho e approx\n- D_h (rho e + p) (boldsymbolu_h + I^c(boldsymbolu_v))\n- D^c_v left WI^f(Jrho)   tildeboldsymbolu  I^f left(fracrho e + prho right)\n  + boldsymbolF_R \n  right ","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"Currently the central reconstruction","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"- D^c_v left WI^f(Jrho)   tildeboldsymbolu  I^f left(fracrho e + prho right) right","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"is treated implicitly.","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"todo: Todo\nThe Jacobian computation should be updated so that the upwinded term- D^c_vleftWI^f(J rho) U^fleft(boldsymbolu_v fracrho e + prho right)rightis treated implicitly.","category":"page"},{"location":"equations/#Internal-energy","page":"Equations","title":"Internal energy","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"fracpartialpartial t rho e_textint = - nabla cdot((rho e_textint + p) boldsymbolu + boldsymbolF_R) + (nabla p) cdot boldsymbolu ","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"The nabla cdot((rho e_textint + p) boldsymbolu term is discretized the same as in total energy:","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"D_h (rho e_textint + p) (boldsymbolu_h + I^c(boldsymbolu_v)) +\n- D^c_v left WI^f(Jrho)   tildeboldsymbolu  I^f left(fracrho e_textint + prho right)\n  + boldsymbolF_R\nright ","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"The (nabla p) cdot boldsymbolu term is discretized as","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"I^c( G^f_v(p) cdot boldsymbolu_v) + G_h(p) cdot boldsymbolu_h ","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"todo: Todo\nWe will need to add nabla_h cdot u_v and nabla_v cdot u_h terms, as they will be non-zero in the presence of topography.","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"Currently the central reconstruction","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"- D^c_v left WI^f(Jrho)   tildeboldsymbolu  I^f left(fracrho e_textint + prho right) + I^c( G^f_v(p) cdot boldsymbolu_v) right","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"is treated implicitly.","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"todo: Todo\nThis should be updated so that the upwinded term- D^c_vleftWI^f(J rho) U^fleft(boldsymbolu_v fracrho e_textint + prho right)rightis treated implicitly.","category":"page"},{"location":"equations/#Scalars","page":"Equations","title":"Scalars","text":"","category":"section"},{"location":"equations/","page":"Equations","title":"Equations","text":"For an arbitrary scalar chi, the density-weighted scalar rhochi follows the continuity equation","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"fracpartialpartial t rho chi = - nabla cdot(rho chi boldsymbolu) ","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"This is discretized using the following","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"fracpartialpartial t rho chi approx\n- D_h rho chi (boldsymbolu_h + I^c(boldsymbolu_v))\n- D^c_v left WI^f(Jrho)  U^fleft( tildeboldsymbolu  fracrho chirho right) right","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"Currently the central reconstruction","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"- D^c_v left WI^f(Jrho)  tildeboldsymbolu  I^fleft( fracrho chirho right) right","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"is treated implicitly.","category":"page"},{"location":"equations/","page":"Equations","title":"Equations","text":"todo: Todo\nThe Jacobian computation should be updated so that the upwinded term- D^c_vleftWI^f(J rho) U^fleft(I^f(boldsymbolu_h) + boldsymbolu_v fracrho chirho right) rightis treated implicitly.","category":"page"},{"location":"repl_scripts/#Julia-scripts-per-Buildkite-job","page":"REPL scripts","title":"Julia scripts per Buildkite job","text":"","category":"section"},{"location":"repl_scripts/","page":"REPL scripts","title":"REPL scripts","text":"include(\"repl_scripts.jl\")","category":"page"},{"location":"cl_args/#Command-line-arguments","page":"Command line arguments","title":"Command line arguments","text":"","category":"section"},{"location":"cl_args/","page":"Command line arguments","title":"Command line arguments","text":"include(\"cl_args.jl\");","category":"page"},{"location":"contributor_guide/#Contributors-Guide","page":"Contributor Guide","title":"Contributors Guide","text":"","category":"section"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Thank you for considering contributions to ClimaAtmos! We hope this guide helps you make a contribution.","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Feel free to ask us questions and chat with us at any time about any topic at all by:","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Opening a GitHub issue","category":"page"},{"location":"contributor_guide/#Creating-issues","page":"Contributor Guide","title":"Creating issues","text":"","category":"section"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"The simplest way to contribute to ClimaAtmos is to create or comment on issues.","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"The most useful bug reports:","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Provide an explicit code snippet –- not just a link –- that reproduces the bug in the latest tagged version of ClimaAtmos. This is sometimes called the \"minimal working example\". Reducing bug-producing code to a minimal example can dramatically decrease the time it takes to resolve an issue.\nPaste the entire error received when running the code snippet, even if it's unbelievably long.\nUse triple backticks (e.g., ```some_code; and_some_more_code;```) to enclose code snippets, and other markdown formatting syntax to make your issue easy and quick to read.\nReport the ClimaAtmos version, Julia version, machine (especially if using a GPU) and any other possibly useful details of the computational environment in which the bug was created.","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Discussions are recommended for asking questions about (for example) the user interface, implementation details, science, and life in general.","category":"page"},{"location":"contributor_guide/#But-I-want-to-*code*!","page":"Contributor Guide","title":"But I want to code!","text":"","category":"section"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"New users help write ClimaAtmos code and documentation by forking the ClimaAtmos repository, using git to edit code and docs, and then creating a pull request. Pull requests are reviewed by ClimaAtmos collaborators.\nA pull request can be merged once it is reviewed and approved by collaborators. If the pull request author has write access, they have the reponsibility of merging their pull request. Otherwise, ClimaAtmos.jl collabators will execute the merge with permission from the pull request author.\nNote: for small or minor changes (such as fixing a typo in documentation), the GitHub editor is super useful for forking and opening a pull request with a single click.\nWrite your code with love and care. In particular, conform to existing ClimaAtmos style and formatting conventions. For example, we love verbose and explicit variable names, use TitleCase for types, snake_case for objects, and always.put.spaces.after.commas. For formatting decisions we loosely follow the YASGuide. It's worth few extra minutes of our time to leave future generations with well-written, readable code.","category":"page"},{"location":"contributor_guide/#General-coding-guidelines","page":"Contributor Guide","title":"General coding guidelines","text":"","category":"section"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Keep the number of members of Julia structs small if possible (less than 8 members).\nCode should reflect \"human intuition\" if possible. This mean abstraction should reflect how humans reason about the problem under consideration.\nCode with small blast radius. If your code needs to be modified or extendended, the resulting required changes should be as small and as localized as possible.\nWhen you write code, write it with testing and debugging in mind.\nIdeally, the lowest level structs have no defaults for their member fields. Nobody can remember all the defaults, so it is better to introduce them at the high-level API only.\nMake sure that module imports are specific so that it is easy to trace back where functions that are used inside a module are coming from.\nConsider naming abstract Julia types \"AbstractMyType\" in order to avoid confusion for the reader of your code.\nComments in your code should explain why the code exists and clarify if necessary, not just restate the line of code in words.\nBe mindful of namespace issues when writing functional code, especially when writing function code that represents mathematical or physical concepts.\nCondider using keywords in your structs to allow readers to more effectively reason about your code.","category":"page"},{"location":"contributor_guide/#What-is-a-\"collaborator\"-and-how-can-I-become-one?","page":"Contributor Guide","title":"What is a \"collaborator\" and how can I become one?","text":"","category":"section"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Collaborators have permissions to review pull requests and status allows a contributor to review pull requests in addition to opening them. Collaborators can also create branches in the main ClimaAtmos repository.\nWe ask that new contributors try their hand at forking ClimaAtmos, and opening and merging a pull request before requesting collaborator status.","category":"page"},{"location":"contributor_guide/#What's-a-good-way-to-start-developing-ClimaAtmos?","page":"Contributor Guide","title":"What's a good way to start developing ClimaAtmos?","text":"","category":"section"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Tackle an existing issue. We keep a list of good first issues that are self-contained and suitable for a newcomer to try and work on.\nTry to run ClimaAtmos and play around with it to simulate your favorite fluids and atmosphere physics. If you run into any problems or find it difficult to use or understand, please open an issue!\nWrite up an example or tutorial on how to do something useful with ClimaAtmos, like how to set up a new physical configuration.\nImprove documentation or comments if you found something hard to use.\nImplement a new feature if you need it to use ClimaAtmos.","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"If you're interested in working on something, let us know by commenting on existing issues or  by opening a new issue. This is to make sure no one else is working on the same issue and so  we can help and guide you in case there is anything you need to know beforehand.","category":"page"},{"location":"contributor_guide/#Ground-Rules","page":"Contributor Guide","title":"Ground Rules","text":"","category":"section"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Each pull request should consist of a logical collection of changes. You can include multiple bug fixes in a single pull request, but they should be related. For unrelated changes, please submit multiple pull requests.\nDo not commit changes to files that are irrelevant to your feature or bugfix (eg: .gitignore).\nBe willing to accept criticism and work on improving your code; we don't want to break other users' code, so care must be taken not to introduce bugs. We discuss pull requests and keep working on them until we believe we've done a good job.\nBe aware that the pull request review process is not immediate, and is generally proportional to the size of the pull request.","category":"page"},{"location":"contributor_guide/#Reporting-a-bug","page":"Contributor Guide","title":"Reporting a bug","text":"","category":"section"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"The easiest way to get involved is to report issues you encounter when using ClimaAtmos or by requesting something you think is missing.","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Head over to the issues page.\nSearch to see if your issue already exists or has even been solved previously.\nIf you indeed have a new issue or request, click the \"New Issue\" button.\nPlease be as specific as possible. Include the version of the code you were using, as well as what operating system you are running. The output of Julia's versioninfo() and ] status is helpful to include. Try your best to include a complete, \"minimal working example\" that reproduces the issue.","category":"page"},{"location":"contributor_guide/#Setting-up-your-development-environment","page":"Contributor Guide","title":"Setting up your development environment","text":"","category":"section"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Install Julia on your system.\nInstall git on your system if it is not already there (install XCode command line tools on a Mac or git bash on Windows).\nLogin to your GitHub account and make a fork of the ClimaAtmos repository by clicking the \"Fork\" button.\nClone your fork of the ClimaAtmos repository (in terminal on Mac/Linux or git shell/ GUI on Windows) in the location you'd like to keep it.\ngit clone https://github.com/your-user-name/ClimaAtmos.jl.git\nNavigate to that folder in the terminal or in Anaconda Prompt if you're on Windows.\nConnect your repository to the upstream (main project).\ngit remote add ClimaAtmos https://github.com/CLiMA/ClimaAtmos.jl.git\nCreate the development environment by opening Julia via julia --project then typing in ] instantiate. This will install all the dependencies in the Project.toml file.\nYou can test to make sure ClimaAtmos works by typing in ] test. Doing so will run all the tests (and this can take a while).","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Your development environment is now ready!","category":"page"},{"location":"contributor_guide/#Pull-Requests","page":"Contributor Guide","title":"Pull Requests","text":"","category":"section"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"We follow the ColPrac guide for collaborative practices. We ask that new contributors read that guide before submitting a pull request.","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Changes and contributions should be made via GitHub pull requests against the main branch.","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"When you're done making changes, commit the changes you made. Chris Beams has written a  guide on how to write good commit messages.","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"When you think your changes are ready to be merged into the main repository, push to your fork and submit a pull request.","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Working on your first Pull Request? You can learn how from this free video series How to Contribute to an Open Source Project on GitHub, Aaron Meurer's tutorial on the git workflow, or the guide “How to Contribute to Open Source\".","category":"page"},{"location":"contributor_guide/#Documentation","page":"Contributor Guide","title":"Documentation","text":"","category":"section"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Generally, we follow the Julia conventions for documentation https://docs.julialang.org/en/v1/manual/documentation/.","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Now that you've made your awesome contribution, it's time to tell the world how to use it. Writing documentation strings is really important to make sure others use your functionality properly. Didn't write new functions? That's fine, but be sure that the documentation for the code you touched is still in great shape. It is not uncommon to find some strange wording or clarification that you can take care of while you are here.","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"Here is an example of a docstring:","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"TODO: add example","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"You can preview how the Documentation will look like after merging by building the documentation  locally. From the main directory of your local repository call","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"julia --project -e 'using Pkg; Pkg.instantiate()'\njulia --project=docs/ -e 'using Pkg; Pkg.instantiate()'\nJULIA_DEBUG=Documenter julia --project=docs/ docs/make.jl","category":"page"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"and then open docs/build/index.html in your favorite browser. Providing the environment variable  JULIA_DEBUG=Documenter will provide with more information in the documentation build process and thus help figuring out a potential bug.","category":"page"},{"location":"contributor_guide/#Credits","page":"Contributor Guide","title":"Credits","text":"","category":"section"},{"location":"contributor_guide/","page":"Contributor Guide","title":"Contributor Guide","text":"This contributor's guide is heavily based on the excellent Oceananigans.jl contributor's guide which is heavily based on the excellent MetPy contributor's guide.","category":"page"},{"location":"#ClimaAtmos.jl","page":"Home","title":"ClimaAtmos.jl","text":"","category":"section"},{"location":"installation_instructions/#Installation-instructions","page":"Installation instructions","title":"Installation instructions","text":"","category":"section"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"Download the ClimaAtmos source with:","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"$ git clone https://github.com/CliMA/ClimaAtmos.jl.git","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"Now change into the ClimaAtmos.jl directory with ","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"$ cd ClimaAtmos.jl","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"To use ClimaAtmos, you need to instantiate all dependencies with:","category":"page"},{"location":"installation_instructions/","page":"Installation instructions","title":"Installation instructions","text":"$ julia --project\njulia>]\n(v1.8) pkg> instantiate","category":"page"}]
}
