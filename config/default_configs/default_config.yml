# Default Configuration for ClimaAtmos.jl
# Resolution
dz_bottom:
  help: "Model bottom grid depth. Default: 500m"
  value: 500.0
z_stretch:
  help: "Stretch grid in z-direction. [`true` (default), `false`]"
  value: true
h_elem:
  help: "number of elements per edge on a cubed sphere"
  value: 6
x_elem:
  help: "number of horizontal elements in the x-direction"
  value: 6
x_max:
  help: "Model domain size, x direction. Default: 300km"
  value: 300000.0
y_elem:
  help: "number of horizontal elements in the y-direction"
  value: 6
y_max:
  help: "Model domain size, y direction. Default: 300km"
  value: 300000.0
z_elem:
  help: "number of vertical elements"
  value: 10
z_max:
  help: "Model top height. Default: 30km"
  value: 30000.0
vorticity_hyperdiffusion_coefficient:
  help: "Hyperdiffusion coefficient for vorticity (m s-1)"
  value: 1.5
scalar_hyperdiffusion_coefficient:
  help: "Hyperdiffusion coefficient for scalar (m s-1)"
  value: 1.5
# Topography
topography:
  help: "Define the surface elevation profile [`NoWarp` (default),`Earth`,`DCMIP200`,`Agnesi`, `Schar`, `Hughes2023`]"
  value: "NoWarp"
mesh_warp_type:
  help: "Sets the interior mesh warp method [`Linear`, `SLEVE`]"
  value: "Linear"
sleve_eta:
  help: "If SLEVE coordinates are chosen, sets the `ηₕ` parameter (if z/z_top > ηₕ, no warping is applied)"
  value: 0.7
sleve_s:
  help: "If SLEVE coordinates are chosen, sets `s`, the warping decay scale parameter"
  value: 10.0
topo_smoothing:
  help: "Choose whether to order-2 smoothing on the LGL mesh"
  value: false
topography_damping_factor:
  help: "Factor by which smallest resolved length-scale is to be damped"
  value: 5
# ODE
use_newton_rtol:
  help: "Whether to check if the current iteration of Newton's method has an error within a relative tolerance, instead of always taking the maximum number of iterations (only for ClimaTimeSteppers.jl)"
  value: false
newton_rtol:
  help: "Relative tolerance of Newton's method (only for ClimaTimeSteppers.jl; only used when `use_newton_rtol` is `true`)"
  value: 1.0e-5
surface_thermo_state_type:
  help: "Surface thermo state type [`GCMSurfaceThermoState` (default), `PrescribedThermoState`]"
  value: "GCMSurfaceThermoState"
split_ode:
  help: "Use split of ODE problem. Examples: [`true` (implicit, default), `false` (explicit)]"
  value: true
use_krylov_method:
  help: "Whether to use a Krylov method to solve the linear system in Newton's method (only for ClimaTimeSteppers.jl)"
  value: false
use_dynamic_krylov_rtol:
  help: "Whether to use Eisenstat-Walker forcing instead of a constant relative tolerance in the Krylov method (only for ClimaTimeSteppers.jl)"
  value: false
max_newton_iters_ode:
  help: "Maximum number of Newton's method iterations (only for ODE algorithms that use Newton's method)"
  value: 1
ode_algo:
  help: "ODE algorithm [`ARS343` (default), `SSP333`, `IMKG343a`, etc.]"
  value: "ARS343"
krylov_rtol:
  help: "Relative tolerance of the Krylov method (only for ClimaTimeSteppers.jl; only used if `use_krylov_method` is `true`)"
  value: 0.1
eisenstat_walker_forcing_alpha:
  help: "Value of alpha to use for Eisenstat-Walker forcing (only for ClimaTimeSteppers.jl; only used if `use_krylov_method` and `use_dynamic_krylov_rtol` are `true`)"
  value: 2.0
jvp_step_adjustment:
  help: "Amount by which the step size of the forward difference approximation of the Jacobian-vector product in the Krylov method should be scaled (only used if `use_krylov_method` is `true`)"
  value: 1.0
# Radiation
rad:
  help: "Radiation model [`nothing` (default), `gray`, `clearsky`, `allsky`, `allskywithclear`]"
  value: ~
idealized_h2o:
  help: "Use idealized H2O in radiation model [`false` (default), `true`]"
  value: false
dt_rad:
  help: "Time between calling radiation callback for sphere configurations"
  value: "6hours"
idealized_clouds:
  help: "Use idealized clouds in radiation model [`false` (default), `true`]"
  value: false
prescribe_clouds_in_radiation:
  help: "Use prescribed clouds in radiation model. Clouds are read from ERA5 data and updated every time radiation is called. The year 2010 is used and continuously repeated. This mode only affect radiation and is only relevant for the RRTGMP mode. [`false` (default), `true`]"
  value: false
insolation:
  help: "Insolation used in radiation model [`idealized` (default), `timevarying`, `rcemipii`]"
  value: "idealized"
add_isothermal_boundary_layer:
  help: "Add an isothermal boundary layer above the domain top for radiation [`false`, `true` (default)]"
  value: true
aerosol_radiation:
  help: "Use aerosols in radiation [`false` (default)]"
  value: false
dt_cloud_fraction:
  help: "Time between calling cloud fraction update"
  value: "3hours"
config:
  help: "Spatial configuration [`sphere` (default), `column`, `box`, `plane`]"
  value: "sphere"
FLOAT_TYPE:
  help: "Float type"
  value: "Float32"
dt:
  help: "Simulation time step. Examples: [`10secs`, `1hours`]"
  value: "600secs"
t_end:
  help: "Simulation end time. Examples: [`1200days`, `40secs`]"
  value: "10days"
output_dir:
  help: "Output directory"
  value: ~
output_dir_style:
  help: "What to do when `output_dir` already exists. With `RemovePreexisting`, `output_dir` is overwritten with a new one. With `ActiveLink`, `output_dir` is treated as a base folder and numbered subfolders are created inside. A new subfolder is created every time a simulation is run, with `output_dir/output_active` pointing to the most recent results. Check out ClimaUtilities.OutputPathGenerator for more information. [`ActiveLink` (default), `RemovePreexisting`]"
  value: "ActiveLink"
device:
  help: "Device type to use [`auto` (default) `CPUSingleThreaded`, `CPUMultiThreaded`, `CUDADevice`]"
  value: "auto"
reference_job_id:
  help: |-
    Identifier of job to use as the "reference" solution in the quicklook plot; the current job's results get compared to the results of the quicklook job on the main branch
  value: ~
vert_diff:
  help: "Vertical diffusion [`false` (default), `VerticalDiffusion`, `true` (defaults to `VerticalDiffusion`), `FriersonDiffusion`, `DecayWithHeightDiffusion`]"
  value: false
hyperdiff:
  help: "Hyperdiffusion [`ClimaHyperdiffusion` (or `true`; default), `none` (or `false`)]"
  value: "CAM_SE"
smagorinsky_lilly:
  help: "Smagorinsky-Lilly diffusive closure [`false` (default), `true`]"
  value: false
bubble:
  help: "Enable bubble correction for more accurate surface areas"
  value: false
start_date:
  help: "Start date of the simulation"
  value: "20100101"
forcing:
  help: "Forcing [`nothing` (default), `held_suarez`]"
  value: ~
test_dycore_consistency:
  help: "Test dycore consistency [`false` (default), `true`]"
  value: false
dt_save_state_to_disk:
  help: "Time between saving the state to disk. Examples: [`10secs`, `1hours`, `1months`, `Inf` (do not save)]"
  value: "Inf"
dt_save_to_sol:
  help: "Time between saving solution. Examples: [`10days`, `1hours`, `Inf` (do not save)]"
  value: "1days"
moist:
  help: "Moisture model [`dry` (default), `equil`, `nonequil`]"
  value: "dry"
divergence_damping_factor:
  help: "Divergence damping factor"
  value: 1.0
rayleigh_sponge:
  help: "Rayleigh sponge [`true`, `false` (default)]"
  value: false
surface_setup:
  help: "Surface flux scheme [`DefaultExchangeCoefficients` (default), `DefaultMoninObukhov`]"
  value: "DefaultExchangeCoefficients"
surface_temperature:
  help: "Prescribed surface temperature functional form ['ZonallySymmetric' (default), 'ZonallyAsymmetric', 'RCEMIPII']"
  value: "ZonallySymmetric"
initial_condition:
  help: "Initial condition [`DryBaroclinicWave`, `MoistBaroclinicWave`, `DecayingProfile`, `IsothermalProfile`, `Bomex`, `DryDensityCurrentProfile`, `AgnesiHProfile`, `ScharProfile`, `RisingThermalBubbleProfile`, `ISDAC`], or a file path for a NetCDF file (read documentation about requirements)."
  value: "DecayingProfile"
perturb_initstate:
  help: "Add a perturbation to the initial condition [`false`, `true` (default)]"
  value: true
discrete_hydrostatic_balance:
  help: "Set the initial state to discrete hydrostatic balance"
  value: false
apply_limiter:
  help: "Apply a horizontal limiter to every tracer [`false` (default), `true`]"
  value: false
precip_model:
  help: "Precipitation model [`nothing` (default), `0M`, `1M`]"
  value: ~
cloud_model:
  help: "Cloud model [`grid_scale`, `quadrature` (default), `quadrature_sgs`]"
  value: "quadrature"
perf_summary:
  help: "Flag for collecting performance summary information"
  value: false
viscous_sponge:
  help: "Viscous sponge [`true`, `false` (default)]"
  value: false
tracer_upwinding:
  help: "Tracer upwinding mode [`none` (default), `first_order` , `third_order`, `boris_book`, `zalesak`, `vanleer_limiter`]"
  value: vanleer_limiter
energy_upwinding:
  help: "Energy upwinding mode [`none` (default), `first_order` , `third_order`, `boris_book`, `zalesak`, `vanleer_limiter`]"
  value: vanleer_limiter
orographic_gravity_wave:
  help: "Orographic drag on horizontal mean flow [`nothing` (default), `gfdl_restart`, `raw_topo`]"
  value: ~
non_orographic_gravity_wave:
  help: "Apply parameterization for convective gravity wave forcing on horizontal mean flow [`false` (default), `true`]"
  value: false
nh_poly:
  help: "Horizontal polynomial degree. Note: The number of quadrature points in 1D within each horizontal element is then Nq = <--nh_poly> + 1"
  value: 3
reproducibility_test:
  help: "(Bool) perform reproducibility test"
  value: false
check_conservation:
  help: "Check conservation of mass and energy [`false` (default), `true`]"
  value: false
ls_adv:
  help: "Large-scale advection [`nothing` (default), `Bomex`, `LifeCycleTan2018`, `Rico`, `ARM_SGP`, `GATE_III`]"
  value: ~
external_forcing:
  help: "External forcing for single column experiments [`nothing` (default), `GCM`]"
  value: ~
external_forcing_file:
  help: "External forcing file containing large-scale forcings, initial conditions, and boundary conditions [`nothing` (default), `path/to/file`]"
  value: ~
cfsite_number:
  help: "cfsite identifier for single column forcing from  `external_forcing_file`, specified as siteN. For site details see Shen et al. 2022 `https://doi.org/10.1029/2021MS002631`. [`site23` (default), `siteN`]"
  value: "site23"
subsidence:
  help: "Subsidence [`nothing` (default), `Bomex`, `LifeCycleTan2018`, `Rico`, `DYCOMS`, `ISDAC`]"
  value: ~
toml:
  help: "TOML file(s) used to override model parameters"
  value: []
prognostic_tke:
  help: "A flag for prognostic TKE [`false` (default), `true`]"
  value: false
prognostic_surface:
  help: "Determines if surface temperature is prognostic [`false` (default), , `true`, `PrognosticSurfaceTemperature`, `PrescribedSurfaceTemperature`]"
  value: false
albedo_model:
  help: "Variable surface albedo [`ConstantAlbedo` (default), `RegressionFunctionAlbedo`, `CouplerAlbedo`]"
  value: "ConstantAlbedo"
implicit_diffusion:
  help: "Whether to treat the vertical diffusion tendency implicitly [`false` (default), `true`]"
  value: false
approximate_linear_solve_iters:
  help: "Number of iterations for the approximate linear solve (used when `implicit_diffusion` is true)"
  value: 1
output_default_diagnostics:
  help: "Output the default diagnostics associated to the selected atmospheric model"
  value: true
enable_diagnostics:
  help: "Set to false to fully disable the diagnostics"
  value: true
netcdf_output_at_levels:
  help: "Do not perform any vertical interpolation in the output NetCDF files. Instead, interpolate horizontally and output the level. "
  value: true
netcdf_interpolation_num_points:
  help: "Override the number of interpolation point for the NetCDF output. This configuration has to be a list of integers, e.g. [180, 90, 10]."
  value: ~
check_nan_every:
  help: "Check if the state contains NaNs every this number of iterations"
  value: 1024
log_progress:
  help: "Log simulation progress, including wall-time estimates"
  value: true
deep_atmosphere:
  help: "If true, use deep atmosphere equations and metric terms, otherwise assume columns are cylindrical (shallow atmosphere) [`true`, `false` (default)]"
  value: false
restart_file:
  help: "Path to HDF5 file to use as simulation starting point"
  value: ~
prescribe_ozone:
  help: "Prescribe time and spatially varying ozone from a file [`false` (default), `true`]"
  value: false
co2_model:
  help: "What CO2 concentration to use for RRTGMP. When fixed, it is set to 397.547 parts per million. Otherwise, it is read from the MaunaLoa measuraments. [`nothing` (default), `Fixed`, `MaunaLoa`]"
  value: ~
detect_restart_file:
  help: "When true, try finding a restart file and use it to restart the simulation. Only works with ActiveLink."
  value: false
prescribed_aerosols:
  help: "Which aerosols to add. List of keys from the data file (e.g., CB1, CB2)."
  value: []
# TODO: remove once https://github.com/CliMA/ClimaAtmos.jl/issues/2873 is closed
call_cloud_diagnostics_per_stage:
  help: "A temporary Bool for calling cloud diagnostics every stage"
  value: false
# EDMF configuration
turbconv:
  help: "Turbulence convection scheme [`nothing` (default), 'prognostic_edmfx', 'diagnostic_edmfx']"
  value: ~
advection_test:
  help: "Switches off all grid-scale and subgrid-scale momentum tendencies [`false` (default), `true`]"
  value: false
zero_tendency:
  help: "Turns off tendencies [`nothing` (default), `grid_scale`, `subgrid_scale`]"
  value: ~
implicit_sgs_advection:
  help: "Whether to treat the subgrid-scale vertical advection tendency implicitly [`false` (default), `true`]"
  value: false
edmf_coriolis:
  help: "EDMF coriolis [`nothing` (default), `Bomex`,`LifeCycleTan2018`,`Rico`,`ARM_SGP`,`DYCOMS_RF01`,`DYCOMS_RF02`,`GABLS`]"
  value: ~
edmfx_filter:
  help: "If set to true, it switches on the relaxation of negative velocity in EDMFX.  [`true`, `false` (default)]"
  value: false
edmfx_nh_pressure:
  help: "If set to true, it switches on EDMFX pressure drag closure.  [`true`, `false` (default)]"
  value: false
edmfx_entr_model:
  help: "EDMFX entrainment closure.  [`nothing` (default), `PiGroups`, `Generalized`, `GeneralizedHarmonics`]"
  value: ~
edmfx_detr_model:
  help: "EDMFX detrainment closure.  [`nothing` (default), `PiGroups`, `Generalized`, `GeneralizedHarmonics`]"
  value: ~
edmfx_upwinding:
  help: "EDMFX upwinding mode [`none` (default), `first_order`, `third_order`]"
  value: none
edmfx_sgsflux_upwinding:
  help: "EDMFX SGS mass flux upwinding mode [`none` (default), `first_order`, `third_order`]"
  value: none
edmfx_sgs_mass_flux:
  help: "If set to true, it switches on EDMFX SGS mass flux.  [`true`, `false` (default)]"
  value: false
edmfx_sgs_diffusive_flux:
  help: "If set to true, it switches on EDMFX SGS diffusive flux.  [`true`, `false` (default)]"
  value: false
updraft_number:
  help: "Sets the number of updrafts for the EDMF scheme"
  value: 1
radiation_reset_rng_seed:
  help: "Reset the RNG seed before calling RRTGMP to a known value (the timestep number). When modeling cloud optics, RRTGMP uses a random number generator. Resetting the seed every time RRTGMP is called to a deterministic value ensures that the simulation is fully reproducible and can be restarted in a reproducible way. Disable this option when running production runs. Please note that this flag is only used for `AllSkyRadiation` and `AllSkyRadiationWithClearSkyDiagnostics` radiation modes."
  value: false
